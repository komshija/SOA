version: '3.4'

services:
    redis:
        image: redis
        networks:
            - internal
        volumes:
            - redisdata:/data
        expose:
            - "6379"
    mqtt:
        image: "emqx/emqx"
        ports: 
          - "11883:11883"
          - "18083:18083" #dashboard
          - "1883:1883" #mqtt port
        expose: 
          - "1883"
        networks: 
          - internal

    cep:
        image: "emqx/kuiper:1.1.2-alpine"
        ports: 
          - "9081:9081" # rest config
        expose: 
          - "9081"
        networks: 
          - internal
        depends_on: 
          - mqtt
        environment: 
         - MQTT_SOURCE__DEFAULT__SERVERS= [mqtt:1883]
        volumes: 
         - ./kuiper-config/init.sh:/init.sh
         - ./kuiper-config/co.txt:/co.txt
         - ./kuiper-config/corule.txt:/corule.txt
         - ./kuiper-config/no2.txt:/no2.txt
         - ./kuiper-config/no2rule.txt:/no2rule.txt
        command: 'sh -c "/init.sh"'

    datamicroservice:
        image: ${DOCKER_REGISTRY-}datamicroservice
        build:
          context: .
          dockerfile: DataMicroservice/Dockerfile
        depends_on:
            - redis
            - mqtt
        networks:
            - internal
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "5001:80"
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
        expose:
        - "80" 

    co-sensor-microservice:
        image: ${DOCKER_REGISTRY-}devicemicroservice
        build:
          context: .
          dockerfile: iots-app/Dockerfile
        networks:
            - internal
        depends_on:
            - datamicroservice
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
        expose:
            - "80" 
        ports:
            - "4001:80"
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    no2-sensor-microservice:
        image: ${DOCKER_REGISTRY-}sensormicroservice
        build:
          context: .
          dockerfile: SensorMicroservice/Dockerfile
        networks:
            - internal
        depends_on:
            - datamicroservice
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "6001:80"
        expose:
          - "80" 
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    commandmicroservice:
        image: ${DOCKER_REGISTRY-}commandmicroservice
        build:
          context: .
          dockerfile: CommandMicroservice/Dockerfile
        networks:
            - internal
        depends_on: 
            - no2-sensor-microservice
            - co-sensor-microservice
            - mqtt
            - cep
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "7001:80"
        expose:
          - "80" 
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

networks:
  internal:

volumes:
  redisdata:

