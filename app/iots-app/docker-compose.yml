version: '3.4'

services:
    redis:
        image: redis
        networks:
            - internal
        volumes:
            - redisdata:/data
        expose:
            - "6379"

    mqtt:
        image: "ncarlier/mqtt"
        ports: 
          - "1883:1883" #mqtt port
        expose: 
          - "1883"
        networks: 
          - internal

    cep:
        image: "emqx/kuiper:1.1.2-alpine"
        ports: 
          - "9081:9081" # rest config
        expose: 
          - "9081"
        networks: 
          - internal
        depends_on: 
          - mqtt
        environment: 
         - MQTT_SOURCE__DEFAULT__SERVERS= [mqtt:1883]
        volumes: 
         - ./kuiper-config/init.sh:/init.sh
        command: 'sh -c "/init.sh"'

    datamicroservice:
        image: ${DOCKER_REGISTRY-}datamicroservice
        build:
          context: .
          dockerfile: DataMicroservice/Dockerfile
        depends_on:
            - redis
            - mqtt
        networks:
            - internal
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "5000:80"
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
        expose:
        - "80" 

    co-sensor-microservice:
        image: ${DOCKER_REGISTRY-}devicemicroservice
        build:
          context: .
          dockerfile: iots-app/Dockerfile
        networks:
            - internal
        depends_on:
            - datamicroservice
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
        expose:
            - "80" 
        restart: always
        ports:
            - "4001:80"
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    no2-sensor-microservice:
        image: ${DOCKER_REGISTRY-}sensormicroservice
        build:
          context: .
          dockerfile: SensorMicroservice/Dockerfile
        networks:
            - internal
        depends_on:
            - datamicroservice
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "6001:80"
        restart: always
        expose:
          - "80" 
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    commandmicroservice:
        image: ${DOCKER_REGISTRY-}commandmicroservice
        build:
          context: .
          dockerfile: CommandMicroservice/Dockerfile
        networks:
            - internal
        depends_on: 
           - no2-sensor-microservice
           - co-sensor-microservice
           - mqtt
           - cep
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "7001:80"
        expose:
          - "80" 
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    apigateway:
        container_name: apigateway
        image: ${DOCKER_REGISTRY-}apigateway
        build:
          context: .
          dockerfile: APIGateway/Dockerfile
        networks:
            - internal
        depends_on: 
            - no2-sensor-microservice
            - co-sensor-microservice
            - datamicroservice
            - commandmicroservice
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://+:80
        ports:
          - "3500:80"
        expose:
          - "80" 
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    dashboard:
        container_name: dashboard
        build:
          context: .
          dockerfile: Dashboard/Dockerfile
        networks:
            - internal
        depends_on:
            - apigateway
        ports:
          - "8080:80"
        stdin_open: true

networks:
  internal:

volumes:
  redisdata:
  